package last.dga.dected.experiment;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import tool.function.ReadWrite;

public class Given_PathMalwareType_putTag_5 {

	final String absolutePath_source = "experimentData/designExperimentData.csv";
	final String outputDataPath = "experimentData/tagDataset/type.1234";

	ReadWrite rw = new ReadWrite();
	
	/**
	 * @Define 依照absolutePath_source裡面的給的路徑和資料，產出標記的Data
	 * @param domain name , malware , type , tage 
	 * **/
	public static void main(String[] args) throws IOException {
		Given_PathMalwareType_putTag_5 mainClass = new Given_PathMalwareType_putTag_5();
		ArrayList<HashMap<String,String>> list = new ArrayList<HashMap<String,String>>();
		list = mainClass.setSorcePathList();
//		資料清理
		mainClass.rw.cleanFile(mainClass.outputDataPath);
		for(HashMap<String,String> map:list){
//			System.out.println(map);
			mainClass.givenPathToOutput(map);
		}
		System.out.println("____Finish____");
	}
	

	void givenPathToOutput(HashMap<String,String> map) throws IOException{
		BufferedReader br = new BufferedReader(new FileReader(map.get("path")+map.get("malware")));
		while(br.ready()){
			String line = br.readLine();
			if(map.get("type").equals("1")){
				line = line.split("/")[0];
			}
			String data = line +","+ map.get("malware") +","+ map.get("type") +","+ map.get("tag");
//			持續寫入
			this.rw.appendWrite(this.outputDataPath, data);
		}
	}
	
	ArrayList<HashMap<String,String>> setSorcePathList() throws IOException{
		ArrayList<HashMap<String,String>> list = new ArrayList<HashMap<String,String>>();
		BufferedReader br = new BufferedReader(new FileReader(this.absolutePath_source));
		int index = 0;
		while(br.ready()){
			String line = br.readLine();
			if(index>0){
				HashMap<String,String> map = new HashMap<String,String>();
//				PATH,惡意軟體名稱,type,DNS數量
				String path = line.split(",")[0];
				String malware = line.split(",")[1];
				String type = line.split(",")[2];
				String tag = "true";
				if(line.split(",")[2].equals("1")){		//正常網域名稱是1，其他都是惡意
					tag = "false";
				}

				map.put("path",path );
				map.put("malware",malware );
				map.put("type",type );
				map.put("tag", tag);
				
				list.add(map);
			}
			index++;
		}
		return list;
	}

}
